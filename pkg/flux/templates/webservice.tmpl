---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: {{ .Environment.Namespace }}-{{ .Service.Name }}
  namespace: {{ .Environment.Namespace }}
  annotations:
    fluxcd.io/automated: "true"
    filter.fluxcd.io/chart-image: glob:{{ .Environment.Namespace }}-*
spec:
  chart:
    git: git@gitlab.com:pearsontechnology/to-cloudengineering/helm-charts
    path: webservice
    ref: master
  values:
    fullnameOverride: {{ .Service.Name }}
    replicaCount: {{ .Service.Replicas }}
    resources:
      limits:
        {{- if .Service.Limits.CPU }}
        cpu: {{ .Service.Limits.CPU }}
        {{- end }}
        {{- if .Service.Limits.Memory }}
        memory: {{ .Service.Limits.Memory }}
        {{- end }}
      requests:
        {{- if .Service.Requests.CPU }}
        cpu: {{ .Service.Requests.CPU }}
        {{- end }}
        {{- if .Service.Requests.Memory }}
        memory: {{ .Service.Requests.Memory }}
        {{- end }}
    image:
      repository: {{ .Registry }}/{{ .Service.Name }}
      tag: latest
    {{- if .Service.Ports }}
    service:
      {{- if .Service.Annotations }}
      annotations:
      {{- range $k, $v := .Service.Annotations }}
        {{ $k }}: {{ $v | quote }}
      {{- end }}
      {{- end }}
      type: ClusterIP
      portDiscovery: true
      ports:
      {{- range .Service.Ports }}
      - port: {{ . }}
        internalPort: {{ . }}
      {{- end }}
    {{- end }}
    extraEnvs:
      {{- range .Service.EnvVars }}
      {{- if .PodField }}
      - name: {{ .Name }}
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: {{ .PodField }}
      {{- else if .Secret }}
      - name: {{ .Secret }}
        valueFrom:
          secretKeyRef:
            key: {{ .Value }}
            name: {{ .Value }}
      {{- else if eq .Name "application.properties" }}
      {{- else if eq .Name "application.yml" }}
      {{- else }}
      - name: {{ .Name }}
        value: {{ .Value | quote }}
      {{- end }}
      {{- end }}
    {{- $deployMethod := default "rolling-upgrade" .Service.Deployment.Method . -}} 
    {{- if $deployMethod }}
    deployment:
      method: {{ $deployMethod }}
      {{- if .Service.Annotations }}
      annotations:
      {{- range $k, $v := .Service.Annotations }}
        {{ $k }}: {{ $v | quote }}
      {{- end }}
      {{- end }}
    {{- if eq $deployMethod "bluegreen"}}
    progressiveDelivery:
      enabled: true
      strategy: bluegreen
    {{- end }}
    {{- end }}
    {{- if .Service.ExternalURL }}
    ingress:
      enabled: true
      hosts:
        {{- range .Service.ExternalURL }}
        - host: {{ . }}
          paths:
          - path: /
        {{- end }}
    {{- if eq .Service.Ssl "true"}}
      ssl: true
      tls:
      - secretName: {{ .Service.Name }}-tls
        hosts: 
          {{- range .Service.ExternalURL }}
          - {{ . }}
          {{- end }}
    {{- end }}
    {{- if eq .Service.Ssl "false"}}
      ssl: false
    {{- end }}
    {{- end }}
    {{- if .Service.Volumes }}
    extraVolumes:
      {{- range .Service.Volumes }}
      - name: {{ .Name }}
        {{- if eq .Type "secret"}}
        secret:
          secretName: {{ .Name }}
          defaultMode: 420
        {{- else  if eq .Type "configMap"}}
        configMap:
          Name: {{ .Name }}
        {{- else }}
        path: {{ .Path }}
        type: {{ .Type }}
        {{- if .Size }}
        size: {{ .Size }}
        {{- end }}
        modes: {{ .Modes }}
        {{- end }}
      {{- end }}
    extraVolumeMounts:
      {{- range .Service.Volumes }}
      - name: {{ .Name }}
        mountPath: {{ .Path }}
      {{- end }}
    {{- end }}
    {{- if .Service.HPA.Metric.Name }}
    {{- with .Service.HPA }}
    hpa:
      enabled: true
      {{- if .MinReplicas }}
      minReplicas: {{ .MinReplicas }}
      {{- end }}
      {{- if .MaxReplicas }}
      maxReplicas: {{ .MaxReplicas }}
      {{- end }}
      {{- if eq .Metric.Name "cpu"}}
      cpu: {{ .Metric.TargetAverageUtilization }}
      {{- else if eq .Metric.Name "memory"}}
      memory: {{ .Metric.TargetAverageUtilization }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Service.ReadinessProbe }}
    {{- with .Service.ReadinessProbe }}
    readinessProbe:
      enabled: true
      {{- if .Handler.HTTPGet.Path }}
      path: {{ .Handler.HTTPGet.Path }}
      {{- end }}
      {{- if .Handler.HTTPGet.Port }}
      port: {{ .Handler.HTTPGet.Port }}
      {{- end }}
      {{- if .InitialDelaySeconds }}
      initialDelaySeconds: {{ .InitialDelaySeconds }}
      {{- end }}
      {{- if .TimeoutSeconds }}
      timeoutSeconds: {{ .TimeoutSeconds }}
      {{- end }}
      {{- if .PeriodSeconds }}
      periodSeconds: {{ .PeriodSeconds }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Service.LivenessProbe }}
    {{- with .Service.LivenessProbe }}
    livenessProbe:
      enabled: true
      {{- if .Handler.HTTPGet.Path }}
      path: {{ .Handler.HTTPGet.Path }}
      {{- end }}
      {{- if .Handler.HTTPGet.Port }}
      port: {{ .Handler.HTTPGet.Port }}
      {{- end }}
      {{- if .InitialDelaySeconds }}
      initialDelaySeconds: {{ .InitialDelaySeconds }}
      {{- end }}
      {{- if .TimeoutSeconds }}
      timeoutSeconds: {{ .TimeoutSeconds }}
      {{- end }}
      {{- if .PeriodSeconds }}
      periodSeconds: {{ .PeriodSeconds }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- $configmapused := "No" -}} 
    {{- range .Service.EnvVars }}
    {{- if or (eq .Name "application.properties") (eq .Name "application.yml") }}
    {{- if eq $configmapused "No" }}
    configMaps:
    {{- $configmapused = "Yes" -}} 
    {{- end }}
      {{ .Name }}:
        {{ .Name }} : |-
        {{ .Value | quote }}
    {{- end }}
    {{- end }}
